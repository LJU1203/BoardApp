<form method="post" id="registrationForm">
    <div class="mt-3">
        <label class="form-label">Login ID</label>
        <input type="text" class="form-control" name="LoginId" id="LoginId" required pattern="^[a-zA-Z0-9]{4,12}$" />
        <small class="text-danger" id="loginIdError"></small>
    </div>

    <div class="mt-3">
        <label class="form-label">Password</label>
        <input type="password" class="form-control" name="Password" id="Password" required minlength="4" maxlength="12" />
        <small class="text-danger" id="passwordError"></small>
    </div>

    <div class="mt-3">
        <label class="form-label">Confirm Password</label>
        <input type="password" class="form-control" name="ConfirmPassword" id="ConfirmPassword" required />
        <small class="text-danger" id="confirmPasswordError"></small>
    </div>

    <div class="mt-3">
        <label class="form-label">User Name</label>
        <input type="text" class="form-control" name="Username" id="Username" required />
        <small class="text-danger" id="usernameError"></small>
    </div>

    <div class="mt-3">
        <button type="submit" class="btn btn-primary">Register</button>
    </div>
</form>


<script>
    document.getElementById("registrationForm").addEventListener("submit", function (event) {
        let isValid = true;

        // Check Login ID pattern
        const loginId = document.getElementById("LoginId");
        const loginIdPattern = /^[a-zA-Z0-9]{4,12}$/;
        if (!loginIdPattern.test(loginId.value)) {
            isValid = false;
            document.getElementById("loginIdError").textContent = "Login ID must be 4-12 characters long and contain only letters and numbers.";
        } else {
            document.getElementById("loginIdError").textContent = "";
        }

        // Check password length
        const password = document.getElementById("Password");
        if (password.value.length < 4 || password.value.length > 12) {
            isValid = false;
            document.getElementById("passwordError").textContent = "Password must be 4-12 characters long.";
        } else {
            document.getElementById("passwordError").textContent = "";
        }

        // Check if passwords match
        const confirmPassword = document.getElementById("ConfirmPassword");
        if (password.value !== confirmPassword.value) {
            isValid = false;
            document.getElementById("confirmPasswordError").textContent = "Passwords do not match.";
        } else {
            document.getElementById("confirmPasswordError").textContent = "";
        }

        // Check if Login ID is already in use
        if (isValid) {
            event.preventDefault(); // Prevent form submission for AJAX check
            checkIfLoginIdExists(loginId.value, function (exists) {
                if (exists) {
                    isValid = false;
                    document.getElementById("loginIdError").textContent = "Login ID is already in use.";
                } else {
                    document.getElementById("loginIdError").textContent = "";
                    checkIfUsernameExists(document.getElementById("Username").value, function (usernameExists) {
                        if (usernameExists) {
                            isValid = false;
                            document.getElementById("usernameError").textContent = "Username is already in use.";
                        } else {
                            document.getElementById("usernameError").textContent = "";
                            if (isValid) {
                                document.getElementById("registrationForm").submit(); // Submit form after all checks
                            }
                        }
                    });
                }
            });
        }

        if (!isValid) {
            event.preventDefault();
        }
    });

    function checkIfLoginIdExists(loginId, callback) {
        fetch(`/api/checkLoginId?loginId=${loginId}`)
            .then(response => response.json())
            .then(data => callback(data.exists));
    }

    function checkIfUsernameExists(username, callback) {
        fetch(`/api/checkUsername?username=${username}`)
            .then(response => response.json())
            .then(data => callback(data.exists));
    }
</script>